{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab_services_student\\\\Desktop\\\\Submission\\\\APDS\\\\APDS2\\\\frontend\\\\src\\\\components\\\\TransferFunds.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransferFunds = ({\n  balance,\n  token,\n  onTransactionUpdate\n}) => {\n  _s();\n  const [selectedAccount, setSelectedAccount] = useState('Savings');\n  const [amount, setAmount] = useState('');\n  const [message, setMessage] = useState('');\n  const handleTransfer = async e => {\n    e.preventDefault();\n    if (amount <= 0 || amount > balance) {\n      setMessage('Invalid amount');\n      return;\n    }\n    try {\n      await api.post('/api/payments/transfer', {\n        toAccount: selectedAccount,\n        amount\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(`Transferred to ${selectedAccount} successfully!`);\n      setAmount('');\n      onTransactionUpdate();\n    } catch (error) {\n      setMessage('Transfer failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Transfer to Your Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTransfer,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedAccount,\n        onChange: e => setSelectedAccount(e.target.value),\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Savings\",\n          children: \"Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Loan\",\n          children: \"Loan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-yellow\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TransferFunds, \"GgpcwcURpt0WonGQoSedKhsb1qM=\");\n_c = TransferFunds;\nexport default TransferFunds;\nvar _c;\n$RefreshReg$(_c, \"TransferFunds\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransferFunds","balance","token","onTransactionUpdate","_s","selectedAccount","setSelectedAccount","amount","setAmount","message","setMessage","handleTransfer","e","preventDefault","api","post","toAccount","headers","Authorization","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/lab_services_student/Desktop/Submission/APDS/APDS2/frontend/src/components/TransferFunds.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TransferFunds = ({ balance, token, onTransactionUpdate }) => {\r\n  const [selectedAccount, setSelectedAccount] = useState('Savings');\r\n  const [amount, setAmount] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleTransfer = async (e) => {\r\n    e.preventDefault();\r\n    if (amount <= 0 || amount > balance) {\r\n      setMessage('Invalid amount');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await api.post('/api/payments/transfer', \r\n        { toAccount: selectedAccount, amount }, \r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMessage(`Transferred to ${selectedAccount} successfully!`);\r\n      setAmount('');\r\n      onTransactionUpdate();\r\n    } catch (error) {\r\n      setMessage('Transfer failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-xl font-bold mb-4\">Transfer to Your Accounts</h2>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleTransfer}>\r\n        <select \r\n          value={selectedAccount} \r\n          onChange={(e) => setSelectedAccount(e.target.value)} \r\n          className=\"input-field\"\r\n        >\r\n          <option value=\"Savings\">Savings</option>\r\n          <option value=\"Loan\">Loan</option>\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n          className=\"input-field\"\r\n        />\r\n        <button type=\"submit\" className=\"btn-yellow\">Transfer</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransferFunds;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
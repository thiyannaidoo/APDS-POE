{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab_services_student\\\\Desktop\\\\Submission\\\\APDS\\\\APDS2\\\\frontend\\\\src\\\\components\\\\Statements.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getPaymentHistory } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statements = ({\n  token\n}) => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        console.log(\"Token being used:\", token); // Log the token\n        const response = await getPaymentHistory(token);\n        console.log(\"Fetched transactions:\", response.data);\n        setTransactions(response.data);\n      } catch (error) {\n        console.error('Failed to fetch transactions:', error);\n      }\n    };\n    fetchTransactions();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Statements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.length > 0 ? transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [new Date(transaction.createdAt).toLocaleDateString(), \" - \", transaction.transactionType === 'incoming' ? 'Money In' : 'Money Out', \": R\", transaction.amount, \" - \", transaction.status]\n      }, transaction._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Statements, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = Statements;\nexport default Statements;\nvar _c;\n$RefreshReg$(_c, \"Statements\");","map":{"version":3,"names":["React","useEffect","useState","getPaymentHistory","jsxDEV","_jsxDEV","Statements","token","_s","transactions","setTransactions","fetchTransactions","console","log","response","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","transaction","Date","createdAt","toLocaleDateString","transactionType","amount","status","_id","_c","$RefreshReg$"],"sources":["C:/Users/lab_services_student/Desktop/Submission/APDS/APDS2/frontend/src/components/Statements.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getPaymentHistory } from '../api';\r\n\r\nconst Statements = ({ token }) => {\r\n  const [transactions, setTransactions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        console.log(\"Token being used:\", token); // Log the token\r\n        const response = await getPaymentHistory(token);\r\n        console.log(\"Fetched transactions:\", response.data);\r\n        setTransactions(response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch transactions:', error);\r\n      }\r\n    };\r\n    fetchTransactions();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"p-5 bg-white rounded-lg shadow-md\">\r\n      <h3 className=\"text-2xl font-semibold mb-4\">Statements</h3>\r\n      <ul>\r\n        {transactions.length > 0 ? (\r\n          transactions.map((transaction) => (\r\n            <li key={transaction._id}>\r\n              {new Date(transaction.createdAt).toLocaleDateString()} - {transaction.transactionType === 'incoming' ? 'Money In' : 'Money Out'}: R{transaction.amount} - {transaction.status}\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No transactions available.</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statements;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,KAAK,CAAC,CAAC,CAAC;QACzC,MAAMO,QAAQ,GAAG,MAAMX,iBAAiB,CAACI,KAAK,CAAC;QAC/CK,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACC,IAAI,CAAC;QACnDL,eAAe,CAACI,QAAQ,CAACC,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDL,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAKY,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDb,OAAA;MAAIY,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DjB,OAAA;MAAAa,QAAA,EACGT,YAAY,CAACc,MAAM,GAAG,CAAC,GACtBd,YAAY,CAACe,GAAG,CAAEC,WAAW,iBAC3BpB,OAAA;QAAAa,QAAA,GACG,IAAIQ,IAAI,CAACD,WAAW,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAC,KAAG,EAACH,WAAW,CAACI,eAAe,KAAK,UAAU,GAAG,UAAU,GAAG,WAAW,EAAC,KAAG,EAACJ,WAAW,CAACK,MAAM,EAAC,KAAG,EAACL,WAAW,CAACM,MAAM;MAAA,GADtKN,WAAW,CAACO,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CACL,CAAC,gBAEFjB,OAAA;QAAAa,QAAA,EAAG;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAjCIF,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}